{"version":3,"sources":["App.js","index.js"],"names":["presets","BASIC","combo","description","WINDOWS_SHORTCUTS","MACOS_SHORTCUTS","LINUX_SHORTCUTS","ANDROID_SHORTCUTS","IPAD_SHORTCUTS","MINECRAFT_SHORTCUTS","WAR_THUNDER_SHORTCUTS","ROBLOX_STUDIO_SHORTCUTS","ENLISTED_SHORTCUTS","CODING_IDE_SHORTCUTS","KICAD_SHORTCUTS","FUSION_360_SHORTCUTS","CANVA_SHORTCUTS","MEDIA","LAYERS","SPECIAL","QMK LIGHTING","createEmptyGrid","Array","fill","map","tap","hold","KeyComponent","React","memo","_ref","keyData","isMacro","isShortcut","onClick","onDoubleClick","customBgColor","customStyles","mainText","subText","concat","colorClass","mainTextColorClass","subTextColorClass","createElement","className","style","backgroundColor","Modal","_ref2","show","title","message","onClose","customButtons","button","index","key","label","MacroFormModal","_ref3","onSave","macro","name","setName","useState","setDescription","sequence","setSequence","error","setError","useEffect","htmlFor","type","id","value","onChange","e","target","placeholder","handleSave","trim","Date","now","ConfirmationModal","_ref4","onConfirm","AddShortcutModal","_ref5","setCombo","isCustomShortcut","App","keymap","setKeymap","0","activeLayer","setActiveLayer","shortcutPool","setShortcutPool","Object","fromEntries","entries","_ref6","k","v","showModal","setShowModal","modalContent","setModalContent","draggedShortcut","setDraggedShortcut","activeTab","setActiveTab","jsonInput","setJsonInput","pressedKeys","setPressedKeys","macros","setMacros","nextMacroId","setNextMacroId","showMacroFormModal","setShowMacroFormModal","editingMacro","setEditingMacro","showConfirmationModal","setShowConfirmationModal","macroToDeleteId","setMacroToDeleteId","aiPrompt","setAiPrompt","isGeneratingAiShortcuts","setIsGeneratingAiShortcuts","aiMacroPrompt","setAiMacroPrompt","isGeneratingAiMacros","setIsGeneratingAiMacros","selectedShortcutCategory","setSelectedShortcutCategory","showAddShortcutModal","setShowAddShortcutModal","connectedPort","setConnectedPort","document","innerHTML","head","appendChild","removeChild","loadProfile","handleKeyDown","preventDefault","prev","newKey","code","timestamp","some","_objectSpread","handleKeyUp","filter","window","addEventListener","removeEventListener","prevPool","MACRO","m","flat","every","cell","handleDragEnd","saved","localStorage","getItem","profileData","JSON","parse","loadedKeymap","layer","isArray","length","href","viewBox","d","Fragment","row","rIdx","cIdx","draggable","onDragStart","handleKeymapDragStart","col","dragData","stringify","isKeymapCell","sourceRow","sourceCol","dataTransfer","setData","onDrop","handleDrop","data","getData","prevKeymap","updatedLayer","droppedItem","tempCell","assignedShortcut","[object Object]","console","onDragOver","onDragEnd","keys","category","replace","gridTemplateColumns","s","i","handleShortcutDragStart","shortcut","updatePreset","app","newShortcut","newPool","stopPropagation","zIndex","handleAddShortcut","async","chatHistory","promptText","push","role","parts","text","payload","contents","generationConfig","responseMimeType","responseSchema","items","properties","propertyOrdering","apiUrl","response","fetch","method","headers","Content-Type","body","result","json","candidates","content","Error","jsonString","generatedShortcuts","AI GENERATED","disabled","handleAddMacro","handleEditMacro","handleDeleteMacro","generatedMacros","currentId","newMacros","keyInfo","saveProfile","setItem","exportKeymap","exportedLayers","layerNum","flatLayer","r","c","exportedMacros","forEach","macroKey","toUpperCase","fullMap","layers","combos","blob","Blob","url","URL","createObjectURL","a","download","click","revokeObjectURL","readable","writable","open","baudRate","writer","getWriter","encoder","TextEncoder","write","encode","releaseLock","err","close","port","navigator","serial","requestPort","loadJsonFromTextArea","parsedJson","loadedMacros","currentMacroId","sequenceArray","toLowerCase","split","word","charAt","slice","join","newKeymap","gridLayer","Math","floor","comboString","tapObj","startsWith","macroNameForLookup","correspondingMacro","find","foundPreset","values","p","warn","String","log","newMacro","confirmDeleteMacro","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.59b89af1.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\n// --- START OF PRESETS DATA ---\nconst presets = {\n  \"BASIC\": [\n    { combo: \"M\", description: \"Move\" },\n    { combo: \"V\", description: \"Via\" },\n    { combo: \"R\", description: \"Rotate\" },\n    { combo: \"Del\", description: \"Delete\" },\n    { combo: \"Ctrl+Z\", description: \"Undo\" },\n    { combo: \"Ctrl+Y\", \"description\": \"Redo\" },\n    { combo: \"F1\", description: \"Help\" },\n    { combo: \"F2\", description: \"Rename\" },\n    { combo: \"F3\", description: \"Search\" },\n    { combo: \"L\", description: \"Line\" },\n    { combo: \"E\", description: \"Extrude\" },\n    { combo: \"P\", description: \"Project\" },\n    { combo: \"C\", description: \"Circle\" },\n    { combo: \"Q\", description: \"Press/Pull\" },\n    { combo: \"X\", description: \"Cut\" },\n    { combo: \"S\", description: \"Sketch\" },\n    { combo: \"T\", description: \"Text\" },\n    { combo: \"Ctrl+C\", description: \"Copy\" },\n    { combo: \"Ctrl+V\", description: \"Paste\" },\n    { combo: \"Ctrl+Z\", description: \"Undo\" },\n    { combo: \"Ctrl+X\", description: \"Cut\" },\n    { combo: \"Ctrl+S\", description: \"Save\" },\n    { combo: \"Ctrl+Shift+G\", description: \"Ungroup\" },\n    { combo: \"Alt+Shift+B\", description: \"Bring to Back\" },\n    { combo: \"Ctrl+D\", description: \"Duplicate\" },\n    { combo: \"Ctrl+Alt+K\", description: \"Lock\" },\n    { combo: \"Ctrl+P\", description: \"Command Palette\" },\n    { combo: \"Ctrl+Shift+P\", description: \"Show All Commands\" },\n    { combo: \"Ctrl+F\", description: \"Find\" },\n    { combo: \"Alt+Shift+F\", description: \"Format Document\" },\n  ],\n  \"WINDOWS_SHORTCUTS\": [\n    { combo: \"Win+D\", description: \"Show Desktop\" },\n    { combo: \"Win+E\", description: \"Open File Explorer\" },\n    { combo: \"Win+L\", description: \"Lock Screen\" },\n    { combo: \"Win+Tab\", description: \"Task View\" },\n    { combo: \"Alt+F4\", description: \"Close App/Shutdown\" },\n    { combo: \"Ctrl+Shift+Esc\", description: \"Open Task Manager\" },\n    { combo: \"Win+PrintScreen\", description: \"Screenshot to File\" },\n    { combo: \"Win+.\", description: \"Emoji Panel\" },\n    { combo: \"Win+Shift+S\", description: \"Snip & Sketch\" },\n  ],\n  \"MACOS_SHORTCUTS\": [\n    { combo: \"Cmd+Space\", description: \"Spotlight Search\" },\n    { combo: \"Cmd+C\", description: \"Copy\" },\n    { combo: \"Cmd+V\", description: \"Paste\" },\n    { combo: \"Cmd+Z\", description: \"Undo\" },\n    { combo: \"Cmd+X\", description: \"Cut\" },\n    { combo: \"Cmd+S\", description: \"Save\" },\n    { combo: \"Cmd+Q\", description: \"Quit App\" },\n    { combo: \"Cmd+W\", description: \"Close Window\" },\n    { combo: \"Cmd+Tab\", description: \"Switch Apps\" },\n    { combo: \"Cmd+Shift+3\", description: \"Screenshot Full\" },\n    { combo: \"Cmd+Shift+4\", description: \"Screenshot Selection\" },\n  ],\n  \"LINUX_SHORTCUTS\": [\n    { combo: \"Ctrl+Alt+T\", description: \"Open Terminal\" },\n    { combo: \"Alt+Tab\", description: \"Switch Windows\" },\n    { combo: \"Ctrl+Alt+Del\", description: \"Logout/Shutdown Menu\" },\n    { combo: \"Super+D\", description: \"Show Desktop\" }, // 'Super' typically is the Windows/Meta key\n    { combo: \"Super+L\", description: \"Lock Screen\" },\n    { combo: \"Ctrl+Shift+N\", description: \"New Folder\" },\n    { combo: \"F2\", description: \"Rename File\" },\n    { combo: \"PrintScreen\", description: \"Screenshot\" },\n    { combo: \"ls\", description: \"List directory contents\" },\n    { combo: \"cd\", description: \"Change directory\" },\n    { combo: \"pwd\", description: \"Print working directory\" },\n    { combo: \"mkdir\", description: \"Make directory\" },\n    { combo: \"rm\", description: \"Remove file/directory\" },\n    { combo: \"cp\", description: \"Copy file\" },\n    { combo: \"mv\", description: \"Move file\" },\n    { combo: \"sudo\", description: \"Run command as superuser\" },\n    { combo: \"man\", description: \"Manual pages\" },\n    { combo: \"top\", description: \"Show running processes\" },\n    { combo: \"ps\", description: \"List processes\" },\n    { combo: \"kill\", description: \"Terminate process\" },\n    { combo: \"grep\", description: \"Search text\" },\n    { combo: \"chmod\", description: \"Change permissions\" },\n    { combo: \"chown\", description: \"Change ownership\" },\n    { combo: \"nano\", description: \"Text editor\" },\n    { combo: \"vim\", description: \"Vi Improved editor\" },\n    { combo: \"df\", description: \"Disk usage\" },\n    { combo: \"du\", description: \"Directory usage\" },\n    { combo: \"tar\", description: \"Archive files\" },\n    { combo: \"zip/unzip\", description: \"Compress/Extract\" },\n    { combo: \"ssh\", description: \"Remote access\" },\n    { combo: \"scp\", description: \"Secure copy\" },\n    { combo: \"wget\", description: \"Download files\" },\n    { combo: \"curl\", description: \"Transfer data\" },\n    { combo: \"alias\", description: \"Create shortcut command\" },\n    { combo: \"history\", description: \"Show command history\" },\n    { combo: \"clear\", description: \"Clear terminal\" },\n    { combo: \"reboot\", description: \"Restart system\" },\n    { combo: \"shutdown\", description: \"Shutdown system\" },\n    { combo: \"uptime\", description: \"Show system uptime\" },\n  ],\n  \"ANDROID_SHORTCUTS\": [\n    { combo: \"RecentApps\", description: \"Show Recent Apps\" },\n    { combo: \"Home\", description: \"Go Home\" },\n    { combo: \"Back\", description: \"Go Back\" },\n    { combo: \"VolumeUp\", description: \"Volume Up\" },\n    { combo: \"VolumeDown\", description: \"Volume Down\" },\n    { combo: \"Power\", description: \"Power Button\" },\n    { combo: \"Search\", description: \"Open Search\" },\n    { combo: \"Camera\", description: \"Open Camera\" },\n  ],\n  \"IPAD_SHORTCUTS\": [\n    { combo: \"Cmd+Space\", description: \"Search/Spotlight\" },\n    { combo: \"Cmd+H\", description: \"Go Home\" },\n    { combo: \"Cmd+Tab\", description: \"Switch Apps\" },\n    { combo: \"Cmd+Shift+3\", description: \"Screenshot Full\" },\n    { combo: \"Cmd+Shift+4\", description: \"Screenshot Selection\" },\n    { combo: \"Globe+C\", description: \"Copy (Contextual)\" }, // Globe key is common on iPad keyboards\n    { combo: \"Globe+V\", description: \"Paste (Contextual)\" },\n    { combo: \"Globe+Z\", description: \"Undo (Contextual)\" },\n  ],\n  \"MINECRAFT_SHORTCUTS\": [\n    { combo: \"W\", description: \"Move forward\" },\n    { combo: \"A\", description: \"Move left\" },\n    { combo: \"S\", description: \"Move backward\" },\n    { combo: \"D\", description: \"Move right\" },\n    { combo: \"Space\", description: \"Jump\" },\n    { combo: \"Shift\", description: \"Sneak\" },\n    { combo: \"Ctrl\", description: \"Sprint\" },\n    { combo: \"E\", description: \"Open inventory\" },\n    { combo: \"Q\", description: \"Drop selected item\" },\n    { combo: \"T\", description: \"Open chat\" },\n    { combo: \"F3+D\", description: \"Clear chat\" },\n    { combo: \"F5\", description: \"Change camera\" },\n    { combo: \"F8\", description: \"Smooth camera\" },\n    { combo: \"Tab\", description: \"Player list\" },\n    { combo: \"Esc\", description: \"Menu\" },\n    { combo: \"Middle Click\", description: \"Pick block (Creative)\" },\n    { combo: \"Double Space\", description: \"Fly toggle (Creative)\" },\n    { combo: \"Ctrl+Middle Click\", description: \"Copy block with NBT\" },\n    { combo: \"Shift+Left Click\", description: \"Destroy instantly (Creative)\" },\n    { combo: \"Shift+Right Click\", description: \"Edit command block (Creative)\" },\n    { combo: \"Shift+Click\", description: \"Move stack (Inventory)\" },\n    { combo: \"Ctrl+Q\", description: \"Drop stack\" },\n    { combo: \"Ctrl+Click\", description: \"Select same items\" },\n    { combo: \"Double Click\", description: \"Grab all of that item\" },\n    { combo: \"Mouse wheel\", description: \"Scroll hotbar\" },\n    { combo: \"Number+Hover\", description: \"Move item to hotbar\" },\n    { combo: \"F3+N\", description: \"Switch gamemode\" },\n    { combo: \"Alt+F4\", description: \"Rage quit\" },\n    { combo: \"F3+C\", description: \"Force crash\" },\n    { combo: \"F3+A\", description: \"Reload chunks\" },\n    { combo: \"Shift+Click\", description: \"Craft all (in recipe book)\" },\n  ],\n  \"WAR_THUNDER_SHORTCUTS\": [\n    { combo: \"W/S\", description: \"Throttle up/down\" },\n    { combo: \"A/D\", description: \"Rudder left/right\" },\n    { combo: \"Q/E\", description: \"Roll left/right\" },\n    { combo: \"Shift\", description: \"Afterburner\" },\n    { combo: \"Ctrl\", description: \"Air brake\" },\n    { combo: \"G\", description: \"Landing gear\" },\n    { combo: \"F\", description: \"Flaps\" },\n    { combo: \"V\", description: \"View mode\" },\n    { combo: \"C\", description: \"Free camera\" },\n    { combo: \"X\", description: \"Look left\" },\n    { combo: \"Z\", description: \"Look right\" },\n    { combo: \"Y\", description: \"Look back\" },\n    { combo: \"B\", description: \"Bomb view\" },\n    { combo: \"N\", description: \"Navigation lights\" },\n    { combo: \"J\", description: \"Bail out\" },\n    { combo: \"M\", description: \"Map\" },\n    { combo: \"Tab\", description: \"Scoreboard\" },\n    { combo: \"T\", description: \"Target\" },\n    { combo: \"R\", description: \"Radar\" },\n    { combo: \"H\", description: \"Head tracking\" },\n    { combo: \"Space\", description: \"Fire main guns\" },\n    { combo: \"Alt\", description: \"Fire secondary\" },\n    { combo: \"Ctrl+Space\", description: \"Drop bomb\" },\n    { combo: \"Shift+Space\", description: \"Fire rocket\" },\n    { combo: \"Mouse 2\", description: \"Zoom\" },\n    { combo: \"Mouse 1\", description: \"Fire guns\" },\n    { combo: \"Mouse 3\", description: \"Track enemy\" },\n    { combo: \"F1\", description: \"Help\" },\n    { combo: \"F2\", description: \"Toggle cockpit\" },\n    { combo: \"F3\", description: \"Chase camera\" },\n    { combo: \"W/A/S/D\", description: \"Drive (Tank)\" },\n    { combo: \"Shift\", description: \"Speed boost\" },\n    { combo: \"V\", description: \"Binocular view\" },\n    { combo: \"U\", description: \"Repair\" },\n    { combo: \"O\", description: \"Toggle optics\" },\n    { combo: \"K\", description: \"Thermal/IR\" },\n    { combo: \"L\", description: \"Headlights\" },\n    { combo: \"R\", description: \"Rangefinder\" },\n    { combo: \"C\", description: \"Commander cam\" },\n    { combo: \"X\", description: \"Machine gun\" },\n    { combo: \"Esc\", description: \"Menu\" },\n    { combo: \"Enter\", description: \"Chat\" },\n    { combo: \"Backspace\", description: \"Leave vehicle\" },\n    { combo: \"Home\", description: \"Reset view\" },\n    { combo: \"Del\", description: \"Zoom out\" },\n    { combo: \"Ins\", description: \"Zoom in\" },\n    { combo: \"Alt+F10\", description: \"Save replay\" },\n    { combo: \"Alt+PrintScreen\", description: \"Screenshot\" },\n    { combo: \"Ctrl+Y\", description: \"Chat channel\" },\n    { combo: \"Ctrl+G\", description: \"Gunner view\" },\n  ],\n  \"ROBLOX_STUDIO_SHORTCUTS\": [\n    { combo: \"Ctrl+S\", description: \"Save\" },\n    { combo: \"Ctrl+Shift+S\", description: \"Save As\" },\n    { combo: \"Ctrl+N\", description: \"New place\" },\n    { combo: \"Ctrl+O\", description: \"Open place\" },\n    { combo: \"Ctrl+Z\", description: \"Undo\" },\n    { combo: \"Ctrl+Y\", description: \"Redo\" },\n    { combo: \"Ctrl+C/V/X\", description: \"Copy/Paste/Cut\" },\n    { combo: \"Ctrl+D\", description: \"Duplicate\" },\n    { combo: \"Ctrl+G\", description: \"Group\" },\n    { combo: \"Ctrl+U\", description: \"Ungroup\" },\n    { combo: \"Ctrl+P\", description: \"Publish\" },\n    { combo: \"F\", description: \"Focus selection\" },\n    { combo: \"Shift+F\", description: \"Follow camera\" },\n    { combo: \"Alt+Click\", description: \"Select parent\" },\n    { combo: \"Ctrl+Click\", description: \"Multi-select\" },\n    { combo: \"Ctrl+Shift+H\", description: \"View explorer\" },\n    { combo: \"Ctrl+Shift+X\", description: \"Properties\" },\n    { combo: \"Ctrl+Shift+C\", description: \"Output\" },\n    { combo: \"Ctrl+Shift+D\", description: \"Asset manager\" },\n    { combo: \"Ctrl+Shift+E\", description: \"Toolbox\" },\n    { combo: \"W/A/S/D\", description: \"Camera move\" },\n    { combo: \"E/Q\", description: \"Move up/down\" },\n    { combo: \"T\", description: \"Rotate\" },\n    { combo: \"R\", description: \"Resize\" },\n    { combo: \"G\", description: \"Move\" },\n    { combo: \"Ctrl+T\", description: \"Anchor\" },\n    { combo: \"Ctrl+L\", description: \"Lock\" },\n    { combo: \"Ctrl+B\", description: \"Break joints\" },\n    { combo: \"Ctrl+J\", description: \"Join surfaces\" },\n    { combo: \"Ctrl+M\", description: \"Material\" },\n    { combo: \"Ctrl+Shift+M\", description: \"Model\" },\n    { combo: \"Shift+Drag\", description: \"Constrain\" },\n    { combo: \"Arrow Keys\", description: \"Nudge\" },\n    { combo: \"Ctrl+P\", description: \"Quick publish\" },\n    { combo: \"Alt+Shift+E\", description: \"Export\" },\n    { combo: \"Ctrl+S\", description: \"Save\" },\n  ],\n  \"ENLISTED_SHORTCUTS\": [\n    { combo: \"W/A/S/D\", description: \"Move\" },\n    { combo: \"Space\", description: \"Jump\" },\n    { combo: \"Shift\", description: \"Sprint\" },\n    { combo: \"Ctrl\", description: \"Crouch\" },\n    { combo: \"Z\", description: \"Prone\" },\n    { combo: \"X\", description: \"Lean left\" },\n    { combo: \"C\", description: \"Lean right\" },\n    { combo: \"F\", description: \"Interact\" },\n    { combo: \"R\", description: \"Reload\" },\n    { combo: \"G\", description: \"Grenade\" },\n    { combo: \"T\", description: \"Pick weapon\" },\n    { combo: \"V\", description: \"Melee\" },\n    { combo: \"B\", description: \"Fire mode\" },\n    { combo: \"Q/E\", description: \"Switch soldier\" },\n    { combo: \"Tab\", description: \"Scoreboard\" },\n    { combo: \"M\", description: \"Map\" },\n    { combo: \"N\", description: \"Night vision\" },\n    { combo: \"Y\", description: \"Orders\" },\n    { combo: \"L\", description: \"Flashlight\" },\n    { combo: \"Esc\", description: \"Menu\" },\n    { combo: \"Click\", description: \"Fire\" },\n    { combo: \"Right Click\", description: \"Aim\" },\n    { combo: \"Scroll\", description: \"Change weapon\" },\n    { combo: \"1-3\", description: \"Weapons\" },\n    { combo: \"H\", description: \"Help\" },\n    { combo: \"Alt\", description: \"Free look\" },\n    { combo: \"Ctrl+Shift\", description: \"Walk\" },\n    { combo: \"F1\", description: \"Camera\" },\n    { combo: \"Alt+M\", description: \"Minimap\" },\n    { combo: \"Ctrl+R\", description: \"Reload prone\" },\n    { combo: \"Ctrl+F1\", description: \"Switch class\" },\n    { combo: \"Alt+V\", description: \"Change view\" },\n    { combo: \"Middle Mouse\", description: \"Ping\" },\n    { combo: \"Hold T\", description: \"Mark enemy\" },\n    { combo: \"Hold Shift\", description: \"Sprint long\" },\n    { combo: \"Hold F\", description: \"Plant/diffuse\" },\n    { combo: \"Ctrl+Number\", description: \"Squad command\" },\n    { combo: \"Shift+1-4\", description: \"Formations\" },\n    { combo: \"K\", description: \"Kill feed\" },\n    { combo: \"U\", description: \"Medkit\" },\n    { combo: \"1\", description: \"Inventory\" },\n    { combo: \"Backspace\", description: \"Suicide\" },\n    { combo: \"Del\", description: \"Respawn\" },\n    { combo: \"F3\", description: \"Record\" },\n    { combo: \"F12\", description: \"Screenshot\" },\n    { combo: \"Tilde\", description: \"Console\" },\n    { combo: \"Ctrl+Alt+Delete\", description: \"Force quit\" },\n  ],\n  \"CODING_IDE_SHORTCUTS\": [\n    { combo: \"Ctrl+P\", description: \"Quick open file\" },\n    { combo: \"Ctrl+Shift+P\", description: \"Command palette\" },\n    { combo: \"Ctrl+`\", description: \"Terminal toggle\" },\n    { combo: \"Ctrl+B\", description: \"Sidebar toggle\" },\n    { combo: \"Ctrl+J\", description: \"Panel toggle\" },\n    { combo: \"Ctrl+Shift+E\", description: \"Explorer\" },\n    { combo: \"Ctrl+Shift+F\", description: \"Search in files\" },\n    { combo: \"Ctrl+Shift+G\", description: \"Git\" },\n    { combo: \"Ctrl+Shift+D\", description: \"Debug\" },\n    { combo: \"Ctrl+Shift+X\", description: \"Extensions\" },\n    { combo: \"Ctrl+Space\", description: \"Trigger suggestion\" },\n    { combo: \"Ctrl+/-\", description: \"Comment line\" },\n    { combo: \"Alt+Up/Down\", description: \"Move line\" },\n    { combo: \"Shift+Alt+Down\", description: \"Copy line down\" },\n    { combo: \"Ctrl+Shift+K\", description: \"Delete line\" },\n    { combo: \"Ctrl+D\", description: \"Select next occurrence\" },\n    { combo: \"Ctrl+L\", description: \"Select line\" },\n    { combo: \"Ctrl+Enter\", description: \"Insert line below\" },\n    { combo: \"Ctrl+Shift+Enter\", description: \"Insert line above\" },\n    { combo: \"Ctrl+Shift+-\", description: \"Jump to bracket\" },\n    { combo: \"Ctrl+Tab\", description: \"Next editor\" },\n    { combo: \"Ctrl+Shift+Tab\", description: \"Previous editor\" },\n    { combo: \"Ctrl+W\", description: \"Close editor\" },\n  ],\n  \"KICAD_SHORTCUTS\": [\n    { combo: \"Ctrl+N\", description: \"New project\" },\n    { combo: \"Ctrl+O\", description: \"Open project\" },\n    { combo: \"Ctrl+S\", description: \"Save\" },\n    { combo: \"Ctrl+Z\", description: \"Undo\" },\n    { combo: \"Ctrl+Y\", description: \"Redo\" },\n    { combo: \"Ctrl+C/V/X\", description: \"Copy/Paste/Cut\" },\n    { combo: \"Del\", description: \"Delete\" },\n    { combo: \"R\", description: \"Rotate\" },\n    { combo: \"M\", description: \"Move\" },\n    { combo: \"E\", description: \"Edit properties\" },\n    { combo: \"W\", description: \"Wire\" },\n    { combo: \"P\", description: \"Place component\" },\n    { combo: \"Shift+Space\", description: \"Cycle units\" },\n    { combo: \"Page Up/Down\", description: \"Zoom in/out\" },\n    { combo: \"Ctrl+Scroll\", description: \"Zoom\" },\n    { combo: \"F1/F2/F3/F4\", description: \"Pan directions\" },\n    { combo: \"Space\", description: \"Reset origin\" },\n    { combo: \"Alt+1-5\", description: \"Layer view\" },\n    { combo: \"Ctrl+B\", description: \"Rebuild ratsnest\" },\n    { combo: \"Ctrl+H\", description: \"Highlight net\" },\n  ],\n  \"FUSION_360_SHORTCUTS\": [\n    { combo: \"S\", description: \"Toolbox\" },\n    { combo: \"L\", description: \"Line\" },\n    { combo: \"R\", description: \"Rectangle\" },\n    { combo: \"C\", description: \"Circle\" },\n    { combo: \"D\", description: \"Dimension\" },\n    { combo: \"T\", description: \"Text\" },\n    { combo: \"M\", description: \"Move\" },\n    { combo: \"Q\", description: \"Press/Pull\" },\n    { combo: \"E\", description: \"Extrude\" },\n    { combo: \"F\", description: \"Fillet\" },\n    { combo: \"Shift+S\", description: \"Sketch shortcuts\" },\n    { combo: \"Ctrl+Z/Y\", description: \"Undo/Redo\" },\n    { combo: \"Ctrl+C/V\", description: \"Copy/Paste\" },\n    { combo: \"Delete\", description: \"Remove\" },\n    { combo: \"B\", description: \"Emboss\" },\n    { combo: \"J\", description: \"Joint\" },\n    { combo: \"H\", description: \"Hole\" },\n    { combo: \"G\", description: \"Grid settings\" },\n    { combo: \"Tab\", description: \"Switch input\" },\n    { combo: \"Alt+Drag\", description: \"Orbit\" },\n    { combo: \"Shift+Scroll\", description: \"Pan\" },\n    { combo: \"Scroll\", description: \"Zoom\" },\n    { combo: \"Home\", description: \"View cube\" },\n    { combo: \"F6\", description: \"Home view\" },\n    { combo: \"F7\", description: \"Slice\" },\n    { combo: \"Ctrl+1/2/3\", description: \"Orthographic views\" },\n    { combo: \"Ctrl+Shift+E\", description: \"Export\" },\n    { combo: \"Ctrl+S\", description: \"Save\" },\n  ],\n  \"CANVA_SHORTCUTS\": [\n    { combo: \"Ctrl+C/V/X\", description: \"Copy/Paste/Cut\" },\n    { combo: \"Ctrl+Z/Y\", description: \"Undo/Redo\" },\n    { combo: \"Ctrl+A\", description: \"Select all\" },\n    { combo: \"Delete\", description: \"Remove\" },\n    { combo: \"Ctrl+G/U\", description: \"Group/Ungroup\" },\n    { combo: \"Ctrl+D\", description: \"Duplicate\" },\n    { combo: \"Shift+Arrow\", description: \"Nudge\" },\n    { combo: \"Alt+Drag\", description: \"Duplicate while dragging\" },\n    { combo: \"T\", description: \"Add text\" },\n    { combo: \"R\", description: \"Add rectangle\" },\n    { combo: \"L\", description: \"Add line\" },\n    { combo: \"C\", description: \"Add circle\" },\n    { combo: \"B\", description: \"Bold\" },\n    { combo: \"I\", description: \"Italic\" }, // Corrected from '1' to 'I' based on common Canva shortcuts\n    { combo: \"U\", description: \"Underline\" },\n    { combo: \"Ctrl+K\", description: \"Link\" },\n    { combo: \"Ctrl+Shift+K\", description: \"Unlink\" },\n    { combo: \"Ctrl+E\", description: \"Align center\" },\n    { combo: \"Ctrl+L/R\", description: \"Align left/right\" },\n    { combo: \"Ctrl+Shift+M\", description: \"Comment\" },\n    { combo: \"Alt+[/]\", description: \"Layer back/front\" },\n    { combo: \"Ctrl+P\", description: \"Print\" },\n    { combo: \"Ctrl+S\", description: \"Save\" },\n    { combo: \"Ctrl+Shift+S\", description: \"Save As\" },\n    { combo: \"Ctrl+Shift+D\", description: \"Download\" },\n  ],\n  // The \"MACRO\" category will be dynamically populated based on the 'macros' state\n  // \"MEDIA\", \"LAYERS\", \"SPECIAL\", \"QMK LIGHTING\" remain static presets\n  \"MEDIA\": [\n    { combo: \"KC_MPRV\", description: \"Prev Track\" },\n    { combo: \"KC_MNXT\", description: \"Next Track\" },\n    { combo: \"KC_MPLY\", description: \"Play/Pause\" },\n    { combo: \"KC_MUTE\", description: \"Mute\" },\n    { combo: \"KC_VOLU\", description: \"Volume Up\" },\n    { combo: \"KC_VOLD\", description: \"Volume Down\" },\n  ],\n  \"LAYERS\": [\n    { combo: \"TG(1)\", description: \"Toggle Layer 1\" },\n    { combo: \"MO(1)\", description: \"Momentary Layer 1\" },\n    { combo: \"TO(0)\", description: \"To Layer 0\" },\n  ],\n  \"SPECIAL\": [\n    { combo: \"KC_PWR\", description: \"Power\" },\n    { combo: \"KC_SLEP\", description: \"Sleep\" },\n    { combo: \"KC_WAKE\", description: \"Wake\" },\n  ],\n  \"QMK LIGHTING\": [\n    { combo: \"RGB_TOG\", description: \"RGB Toggle\" },\n    { combo: \"RGB_MOD\", description: \"RGB Mode\" },\n    { combo: \"RGB_HUI\", description: \"Hue Inc\" },\n    { combo: \"RGB_HUD\", description: \"Hue Dec\" },\n    { combo: \"RGB_SAI\", description: \"Sat Inc\" },\n    { combo: \"RGB_SAD\", description: \"Sat Dec\" },\n    { combo: \"RGB_VAI\", description: \"Val Inc\" },\n    { combo: \"RGB_VAD\", description: \"Val Dec\" },\n  ]\n};\n// --- END OF PRESETS DATA ---\n\n// Helper function to create an empty 3x3 grid for a keymap layer\nconst createEmptyGrid = () => Array(3).fill().map(() => Array(3).fill({ tap: null, hold: null }));\n\n// --- START OF KeyComponent DEFINITION ---\nconst KeyComponent = React.memo(({\n  keyData,\n  isMacro, // Prop from App.js to indicate if this key represents a macro\n  isShortcut, // Prop from App.js to indicate if this key represents a custom/AI shortcut\n  onClick,\n  onDoubleClick,\n  customBgColor,\n  customStyles\n}) => {\n  const { combo, description } = keyData;\n\n  let mainText = '';\n  let subText = '';\n\n  // Determine main and sub text based on available data\n  if (description) {\n    mainText = description;\n    if (combo && combo !== description) {\n      subText = combo;\n    }\n  } else if (combo) {\n    mainText = combo;\n  } else {\n    mainText = 'Empty';\n  }\n\n  // Append type indicators to subText if applicable\n  if (isMacro) {\n    subText = subText ? `${subText} (Macro)` : '(Macro)';\n  } else if (isShortcut) {\n    subText = subText ? `${subText} (Custom)` : '(Custom)';\n  }\n\n\n  // Base Tailwind classes for all key components\n  const keyClass = `\n    relative\n    w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 lg:w-28 lg:h-28\n    flex items-center justify-center\n    font-bold rounded-lg\n    border-b-4 border-r-2 border-red-700\n    active:border-b-0\n    transition-all duration-100 ease-in-out\n    transform active:translate-y-1 active:translate-x-0.5\n    shadow-lg\n    cursor-pointer\n    select-none\n    overflow-hidden\n    p-1\n  `;\n\n  // Determine background color and text color based on type (macro, shortcut, or default red) or custom color\n  let colorClass = '';\n  let mainTextColorClass = ''; // For mainText\n  let subTextColorClass = ''; // For subText\n\n  if (customBgColor) {\n    colorClass = `bg-[${customBgColor}]`;\n    mainTextColorClass = 'text-white';\n    subTextColorClass = 'text-zinc-400 opacity-80';\n  } else if (isMacro) {\n    colorClass = 'bg-purple-600 hover:bg-purple-700';\n    mainTextColorClass = 'text-white';\n    subTextColorClass = 'text-purple-200 opacity-80';\n  } else if (isShortcut) {\n    colorClass = 'bg-blue-600 hover:bg-blue-700';\n    mainTextColorClass = 'text-white';\n    subTextColorClass = 'text-blue-200 opacity-80';\n  } else {\n    // Default red keys\n    colorClass = 'bg-red-500 hover:bg-red-600';\n    mainTextColorClass = 'text-black'; // Main text is black as requested\n    subTextColorClass = 'text-zinc-700 opacity-80'; // Subtext is a darker gray for contrast on red\n  }\n\n  return (\n    <div\n      className={`${keyClass} ${colorClass} ${customStyles || ''}`}\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      style={customBgColor ? { backgroundColor: customBgColor } : {}}\n    >\n      <div className=\"text-center break-words leading-tight\">\n        <span className={`block text-base font-bold ${mainTextColorClass}`}>{mainText}</span>\n        {subText && <span className={`block text-xs mt-0.5 ${subTextColorClass}`}>{subText}</span>}\n      </div>\n    </div>\n  );\n});\n// --- END OF KeyComponent DEFINITION ---\n\n// --- START OF Modal DEFINITION ---\nconst Modal = ({ show, title, message, onClose, customButtons }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-zinc-800 p-6 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\n        <h2 className=\"text-xl font-bold text-red-300 mb-4\">{title}</h2>\n        <p className=\"text-white mb-6\">{message}</p>\n        <div className=\"flex justify-end space-x-2\">\n          {customButtons ? (\n            customButtons.map((button, index) => (\n              <button\n                key={index}\n                onClick={button.onClick}\n                className={`${button.className || 'bg-red-600 hover:bg-red-700'} text-white font-bold py-2 px-4 rounded-lg`}\n              >\n                {button.label}\n              </button>\n            ))\n          ) : (\n            <button\n              onClick={onClose}\n              className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg\"\n            >\n              Close\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n// --- END OF Modal DEFINITION ---\n\n// --- START OF MacroFormModal DEFINITION ---\nconst MacroFormModal = ({ show, onClose, onSave, macro }) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [sequence, setSequence] = useState(''); // Renamed from 'steps' to 'sequence' for clarity\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (show && macro) {\n      setName(macro.name || '');\n      setDescription(macro.description || '');\n      setSequence(macro.sequence || ''); // Use 'sequence'\n      setError('');\n    } else if (show && !macro) {\n      setName('');\n      setDescription('');\n      setSequence('');\n      setError('');\n    }\n  }, [show, macro]);\n\n  const handleSave = () => {\n    if (!name.trim()) {\n      setError('Macro name cannot be empty.');\n      return;\n    }\n    if (!sequence.trim()) {\n      setError('Macro sequence cannot be empty.');\n      return;\n    }\n    setError('');\n    // Pass 'sequence' instead of 'steps'\n    onSave({ id: macro ? macro.id : Date.now(), name, description, sequence });\n    onClose();\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-zinc-800 p-6 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\n        <h2 className=\"text-xl font-bold text-red-300 mb-4\">{macro ? 'Edit Macro' : 'Create New Macro'}</h2>\n\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\n\n        <div className=\"mb-4\">\n          <label htmlFor=\"macroName\" className=\"block text-white text-sm font-bold mb-2\">Macro Name:</label>\n          <input\n            type=\"text\"\n            id=\"macroName\"\n            className=\"shadow appearance-none border border-zinc-700 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline bg-zinc-900\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"e.g., Delete Line\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"macroDescription\" className=\"block text-white text-sm font-bold mb-2\">Description (optional):</label>\n          <input\n            type=\"text\"\n            id=\"macroDescription\"\n            className=\"shadow appearance-none border border-zinc-700 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline bg-zinc-900\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"e.g., Deletes current line, copies to clipboard\"\n          />\n        </div>\n        <div className=\"mb-6\">\n          <label htmlFor=\"macroSequence\" className=\"block text-white text-sm font-bold mb-2\">Macro Sequence (e.g., Hello World!{`{Enter}`}, Ctrl+S{`{Delay 100}`}{`{Ctrl+P}`}):</label>\n          <textarea\n            id=\"macroSequence\"\n            className=\"shadow appearance-none border border-zinc-700 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline bg-zinc-900 h-24 resize-y\"\n            value={sequence}\n            onChange={(e) => setSequence(e.target.value)}\n            placeholder=\"e.g., Ctrl+C,Ctrl+V,Enter\"\n          />\n        </div>\n\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            onClick={onClose}\n            className=\"bg-zinc-600 hover:bg-zinc-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            {macro ? 'Save Changes' : 'Create Macro'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n// --- END OF MacroFormModal DEFINITION ---\n\n// --- START OF ConfirmationModal DEFINITION ---\nconst ConfirmationModal = ({ show, onClose, onConfirm, message }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-zinc-800 p-6 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\n        <h2 className=\"text-xl font-bold text-red-300 mb-4\">Confirm Action</h2>\n        <p className=\"text-white mb-6\">{message}</p>\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            onClick={onClose}\n            className=\"bg-zinc-600 hover:bg-zinc-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n// --- END OF ConfirmationModal DEFINITION ---\n\n// --- START OF AddShortcutModal DEFINITION ---\nconst AddShortcutModal = ({ show, onClose, onSave }) => {\n  const [combo, setCombo] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (show) {\n      setCombo('');\n      setDescription('');\n      setError('');\n    }\n  }, [show]);\n\n  const handleSave = () => {\n    if (!combo.trim()) {\n      setError('Shortcut combination cannot be empty.');\n      return;\n    }\n    if (!description.trim()) {\n      setError('Description cannot be empty.');\n      return;\n    }\n    setError('');\n    // Ensure the new shortcut is marked as a custom shortcut\n    onSave({ id: Date.now(), combo, description, isCustomShortcut: true });\n    onClose();\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-zinc-800 p-6 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\n        <h2 className=\"text-xl font-bold text-red-300 mb-4\">Add New Shortcut</h2>\n\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\n\n        <div className=\"mb-4\">\n          <label htmlFor=\"shortcutCombo\" className=\"block text-white text-sm font-bold mb-2\">Shortcut Combo (e.g., Ctrl+C):</label>\n          <input\n            type=\"text\"\n            id=\"shortcutCombo\"\n            className=\"shadow appearance-none border border-zinc-700 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline bg-zinc-900\"\n            value={combo}\n            onChange={(e) => setCombo(e.target.value)}\n            placeholder=\"e.g., Alt+Shift+F\"\n          />\n        </div>\n        <div className=\"mb-6\">\n          <label htmlFor=\"shortcutDescription\" className=\"block text-white text-sm font-bold mb-2\">Description (e.g., Format Document):</label>\n          <input\n            type=\"text\"\n            id=\"shortcutDescription\"\n            className=\"shadow appearance-none border border-zinc-700 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline bg-zinc-900\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"e.g., Open quick search\"\n          />\n        </div>\n\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            onClick={onClose}\n            className=\"bg-zinc-600 hover:bg-zinc-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            onClick={handleSave}\n            className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg\"\n          >\n            Add Shortcut\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n// --- END OF AddShortcutModal DEFINITION ---\n\n\n// Main App component\nexport default function App() {\n  // State for the keymap, organized by layer (e.g., '0', '1', etc.)\n  const [keymap, setKeymap] = useState({ '0': createEmptyGrid() });\n  // State for the currently active layer being edited\n  const [activeLayer, setActiveLayer] = useState('0');\n\n  // State for the pool of available shortcuts, initialized from presets\n  const [shortcutPool, setShortcutPool] = useState(Object.fromEntries(Object.entries(presets).map(([k, v]) => [k, [...v]])));\n  // State for controlling the general info/error modal\n  const [showModal, setShowModal] = useState(false);\n  // Content for the general info/error modal\n  const [modalContent, setModalContent] = useState({ title: \"\", message: \"\" });\n  // State to track the shortcut being dragged for visual feedback\n  const [draggedShortcut, setDraggedShortcut] = useState(null);\n  // State for sidebar navigation tab\n  const [activeTab, setActiveTab] = useState('keymap');\n  // State for JSON input in the settings tab\n  const [jsonInput, setJsonInput] = useState('');\n\n  // State for Key Tester tab: stores currently pressed keys\n  const [pressedKeys, setPressedKeys] = useState([]);\n\n  // State for Macros: list of defined macros\n  const [macros, setMacros] = useState([]);\n  // Counter for assigning unique IDs to new macros\n  const [nextMacroId, setNextMacroId] = useState(1);\n  // State for showing the macro form modal (add/edit)\n  const [showMacroFormModal, setShowMacroFormModal] = useState(false);\n  // State for the macro currently being edited\n  const [editingMacro, setEditingMacro] = useState(null);\n  // State for showing the macro deletion confirmation modal\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  // ID of the macro to be deleted\n  const [macroToDeleteId, setMacroToDeleteId] = useState(null);\n\n  // State for AI Shortcut Generator prompt and loading status\n  const [aiPrompt, setAiPrompt] = useState('');\n  const [isGeneratingAiShortcuts, setIsGeneratingAiShortcuts] = useState(false);\n\n  // State for AI Macro Generator prompt and loading status\n  const [aiMacroPrompt, setAiMacroPrompt] = useState('');\n  const [isGeneratingAiMacros, setIsGeneratingAiMacros] = useState(false);\n\n  // State for currently selected shortcut category in the pool display\n  const [selectedShortcutCategory, setSelectedShortcutCategory] = useState('BASIC');\n\n  // State for showing the Add Shortcut Modal\n  const [showAddShortcutModal, setShowAddShortcutModal] = useState(false);\n\n  // State for Web Serial API connection (for device communication)\n  const [connectedPort, setConnectedPort] = useState(null);\n\n\n  // Effect to inject custom scrollbar styles into the document head\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .custom-scrollbar::-webkit-scrollbar {\n        width: 8px;\n      }\n      .custom-scrollbar::-webkit-scrollbar-track {\n        background: #3f3f46; /* zinc-700 */\n        border-radius: 10px;\n      }\n      .custom-scrollbar::-webkit-scrollbar-thumb {\n        background: #ef4444; /* red-500 */\n        border-radius: 10px;\n      }\n      .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n        background: #dc2626; /* red-600 */\n      }\n    `;\n    document.head.appendChild(style);\n    // Cleanup function to remove the style when the component unmounts\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Effect to load user profile from local storage on component mount\n  useEffect(() => {\n    loadProfile();\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Effect for Key Tester functionality: attaches/removes keyboard event listeners\n  useEffect(() => {\n    if (activeTab === 'keytester') {\n      // Handler for keydown events\n      const handleKeyDown = (e) => {\n        e.preventDefault(); // Prevent default browser actions (e.g., scrolling with spacebar)\n        setPressedKeys(prev => {\n          const newKey = { key: e.key, code: e.code, timestamp: Date.now() };\n          // Add key to list only if it's not already recorded as pressed (to avoid duplicates on hold)\n          if (!prev.some(k => k.code === e.code && k.type === 'down')) {\n            return [...prev, { ...newKey, type: 'down' }];\n          }\n          return prev;\n        });\n      };\n\n      // Handler for keyup events\n      const handleKeyUp = (e) => {\n        e.preventDefault(); // Prevent default browser actions\n        // Remove released key from the list of pressed keys\n        setPressedKeys(prev => prev.filter(k => k.code !== e.code));\n      };\n\n      // Add event listeners when Key Tester tab is active\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n\n      // Cleanup function to remove event listeners when component unmounts or tab changes\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n        window.removeEventListener('keyup', handleKeyUp);\n      };\n    } else {\n      // Clear any pressed keys if switching away from the Key Tester tab\n      setPressedKeys([]);\n    }\n  }, [activeTab]); // Reruns when activeTab changes\n\n  // Effect to dynamically update the \"MACRO\" category in shortcutPool based on the 'macros' state\n  useEffect(() => {\n    setShortcutPool(prevPool => ({\n      ...prevPool,\n      \"MACRO\": macros.map(m => ({\n        combo: `MACRO_${m.id}`, // Unique combo for the macro\n        description: m.name,    // Display the macro's user-defined name\n        isMacro: true           // Flag to identify it as a macro for KeyComponent\n      }))\n    }));\n  }, [macros]); // This effect runs whenever the 'macros' state changes\n\n\n  // Helper to check if the current active layer's keymap is entirely empty\n  const isKeymapEmpty = keymap[activeLayer] && keymap[activeLayer].flat().every(cell => cell.tap === null && cell.hold === null);\n\n\n  // Handles dropping a draggable item onto a keymap cell\n  const handleDrop = (e, row, col) => {\n    e.preventDefault(); // Prevent default browser handling of the drop\n    const data = e.dataTransfer.getData(\"text/plain\"); // Get data transferred during drag\n\n    setKeymap(prevKeymap => {\n      // Create a mutable copy of the active layer's keymap, or an empty grid if it doesn't exist\n      const updatedLayer = [...(prevKeymap[activeLayer] || createEmptyGrid())];\n      try {\n        const droppedItem = JSON.parse(data); // Attempt to parse the dropped data as JSON\n\n        if (droppedItem.isKeymapCell) {\n          // If the dropped item originated from another keymap cell (reordering)\n          const sourceRow = droppedItem.sourceRow;\n          const sourceCol = droppedItem.sourceCol;\n\n          // Swap the contents of the source and target cells\n          const tempCell = updatedLayer[row][col];\n          updatedLayer[row][col] = droppedItem.cell;\n          updatedLayer[sourceRow][sourceCol] = tempCell;\n        } else {\n          // If the dropped item is a shortcut from the pool (assigning)\n          let assignedShortcut = { ...droppedItem }; // Create a copy to modify\n\n          // If it's from the \"AI GENERATED\" category or was explicitly marked as custom (from AddShortcutModal)\n          // ensure it retains its custom shortcut flag.\n          if (selectedShortcutCategory === \"AI GENERATED\" || assignedShortcut.isCustomShortcut) {\n            assignedShortcut.isCustomShortcut = true;\n          }\n          // If it's from the \"MACRO\" category, it already has isMacro: true from the useEffect that populates shortcutPool\n          // So no need to explicitly set isMacro here again, just ensure it's copied.\n\n          updatedLayer[row][col] = { tap: assignedShortcut, hold: null }; // Assign the augmented shortcut\n        }\n        // Return the updated keymap state\n        return { ...prevKeymap, [activeLayer]: updatedLayer };\n      } catch (error) {\n        // Fallback if JSON parsing fails (e.g., plain text was dragged)\n        console.error(\"Failed to parse dropped data:\", error);\n        // Treat as a generic custom shortcut if parsing fails\n        updatedLayer[row][col] = { tap: { combo: data, description: data, isCustomShortcut: true }, hold: null };\n        return { ...prevKeymap, [activeLayer]: updatedLayer };\n      }\n    });\n    setDraggedShortcut(null); // Clear the dragged shortcut state after drop\n  };\n\n  // Handles starting a drag operation from a keymap cell (for reordering)\n  const handleKeymapDragStart = (e, cell, row, col) => {\n    // Store the entire cell object and its original position as JSON\n    const dragData = JSON.stringify({ isKeymapCell: true, cell: cell, sourceRow: row, sourceCol: col });\n    e.dataTransfer.setData(\"text/plain\", dragData);\n  };\n\n  // Handles starting a drag operation from a shortcut pool item\n  const handleShortcutDragStart = (e, shortcut) => {\n    // Store the entire shortcut object (combo and description) as JSON\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(shortcut));\n    setDraggedShortcut(shortcut); // Store the shortcut being dragged for visual feedback\n  };\n\n  // Handles drag end event for visual feedback (clears the dragged item state)\n  const handleDragEnd = () => {\n    setDraggedShortcut(null);\n  };\n\n  // Saves the current keymap and macros to browser's local storage\n  const saveProfile = () => {\n    const profileData = {\n      keymap: keymap,\n      macros: macros\n    };\n    localStorage.setItem(\"trkey_profile\", JSON.stringify(profileData));\n    setModalContent({\n      title: \"Profile Saved\",\n      message: \"Your current keymap and macros have been saved to your browser's local storage.\"\n    });\n    setShowModal(true);\n  };\n\n  // Loads a saved profile from browser's local storage\n  const loadProfile = () => {\n    const saved = localStorage.getItem(\"trkey_profile\");\n    if (saved) {\n      const profileData = JSON.parse(saved);\n      // Ensure keymap has at least layer '0' and all layers are valid 3x3 grids\n      const loadedKeymap = profileData.keymap || { '0': createEmptyGrid() };\n      for (const layer in loadedKeymap) {\n          if (!Array.isArray(loadedKeymap[layer]) || loadedKeymap[layer].length !== 3 || loadedKeymap[layer][0].length !== 3) {\n              loadedKeymap[layer] = createEmptyGrid();\n          }\n      }\n      setKeymap(loadedKeymap);\n      setMacros(profileData.macros || []); // Load macros, default to empty array if none\n      setModalContent({\n        title: \"Profile Loaded\",\n        message: \"Profile loaded successfully from browser storage.\"\n      });\n    } else {\n      setModalContent({\n        title: \"No Profile Found\",\n        message: \"No saved profile found in browser storage.\"\n      });\n    }\n    setShowModal(true);\n  };\n\n  // Updates a shortcut within a specific category in the shortcut pool\n  const updatePreset = (app, index, newShortcut) => {\n    setShortcutPool(prevPool => {\n      const newPool = { ...prevPool };\n      // Ensure the category exists before attempting to update\n      if (!newPool[app]) {\n          newPool[app] = [];\n      }\n      newPool[app][index] = newShortcut; // Update the shortcut at the specified index\n      return newPool;\n    });\n  };\n\n  // Exports the current keymap and macros as a JSON file\n  const exportKeymap = () => {\n    const exportedLayers = {}; // Layers will be an object of arrays\n    for (const layerNum in keymap) {\n        const flatLayer = [];\n        // Iterate through the 3x3 grid row by row, then column by column\n        for (let r = 0; r < 3; r++) {\n            for (let c = 0; c < 3; c++) {\n                const cell = keymap[layerNum][r][c];\n                // Get the combo string, or \"KC_NO\" if empty\n                flatLayer.push(cell.tap ? cell.tap.combo : \"KC_NO\");\n            }\n        }\n        exportedLayers[layerNum] = flatLayer;\n    }\n\n    const exportedMacros = {}; // Macros will be an object\n    macros.forEach(macro => {\n        // Ensure macro name is valid for a key (uppercase, no spaces, no special chars)\n        const macroKey = `MACRO_${macro.name.toUpperCase().replace(/\\s/g, '_').replace(/[^A-Z0-9_]/g, '')}`;\n        // The sequence is stored as a single-element array containing the string\n        exportedMacros[macroKey] = [macro.sequence];\n    });\n\n    const fullMap = {\n      layers: exportedLayers, // Include all configured layers\n      macros: exportedMacros, // Include macros in the new object format\n      combos: [], // Add an empty combos array as requested\n      // layer_toggle_button is omitted as it doesn't map directly to current UI\n    };\n    // Create a Blob containing the JSON data\n    const blob = new Blob([JSON.stringify(fullMap, null, 2)], { type: \"application/json\" });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    // Create a temporary anchor element to trigger the download\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"trkey_config.json\"; // Suggested filename\n    document.body.appendChild(a);\n    a.click(); // Programmatically click the anchor to start download\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    // Show a success modal\n    setModalContent({\n      title: \"Export Successful\",\n      message: \"Configuration exported as trkey_config.json.\"\n    });\n    setShowModal(true);\n  };\n\n  // Connects to a serial device using Web Serial API\n  const connectToDevice = async () => {\n    try {\n      // Request permission to access a serial port\n      const port = await navigator.serial.requestPort();\n      setConnectedPort(port); // Store the connected port in state\n      setModalContent({\n        title: \"Device Connected\",\n        message: \"Micropad connected successfully. You can now upload your keymap.\"\n      });\n    } catch (err) {\n      // Handle connection errors\n      setModalContent({\n        title: \"Connection Failed\",\n        message: \"Failed to connect to device: \" + err.message\n      });\n      setConnectedPort(null); // Clear connected port on failure\n    } finally {\n      setShowModal(true); // Always show a modal with connection status\n    }\n  };\n\n  // Disconnects from the currently connected serial device\n  const disconnectDevice = async () => {\n    if (connectedPort) {\n      try {\n        await connectedPort.close(); // Close the serial port\n        setConnectedPort(null); // Clear connected port from state\n        setModalContent({\n          title: \"Disconnected\",\n          message: \"Micropad disconnected successfully.\"\n        });\n      } catch (err) {\n        // Handle disconnection errors\n        setModalContent({\n          title: \"Disconnection Failed\",\n          message: \"Failed to disconnect: \" + err.message\n        });\n      } finally {\n        setShowModal(true); // Always show a modal with disconnection status\n      }\n    }\n  };\n\n  // Uploads the current keymap configuration to the connected serial device\n  const uploadKeymapToConnectedDevice = async () => {\n    if (!connectedPort) {\n      // If no device is connected, inform the user\n      setModalContent({\n        title: \"No Device Connected\",\n        message: \"Please connect to your micropad first.\"\n      });\n      setShowModal(true);\n      return;\n    }\n\n    try {\n      // Open the port if it's not already open. Baud rate must match device firmware.\n      if (connectedPort.readable === null && connectedPort.writable === null) {\n        await connectedPort.open({ baudRate: 500000 }); // Common baud rate for ESP32\n      }\n\n      // Get a writer to send data to the device\n      const writer = connectedPort.writable.getWriter();\n\n      // Prepare the keymap data for export (similar to exportKeymap function)\n      const exportedLayers = {};\n      for (const layerNum in keymap) {\n        const flatLayer = [];\n        for (let r = 0; r < 3; r++) {\n            for (let c = 0; c < 3; c++) {\n                const cell = keymap[layerNum][r][c];\n                flatLayer.push(cell.tap ? cell.tap.combo : \"KC_NO\");\n            }\n        }\n        exportedLayers[layerNum] = flatLayer;\n      }\n\n      const exportedMacros = {};\n      macros.forEach(macro => {\n          const macroKey = `MACRO_${macro.name.toUpperCase().replace(/\\s/g, '_').replace(/[^A-Z0-9_]/g, '')}`;\n          exportedMacros[macroKey] = [macro.sequence];\n      });\n\n      const fullMap = {\n        layers: exportedLayers,\n        macros: exportedMacros,\n        combos: [],\n      };\n      const json = JSON.stringify(fullMap); // Convert the full map to a JSON string\n      const encoder = new TextEncoder(); // Create a TextEncoder to convert string to bytes\n      await writer.write(encoder.encode(json)); // Write the JSON bytes to the serial port\n      writer.releaseLock(); // Release the writer lock\n\n      // Show success modal\n      setModalContent({\n        title: \"Upload Successful\",\n        message: \"Configuration uploaded successfully! The device should restart with the new keymap.\"\n      });\n    } catch (err) {\n      // Handle upload errors\n      setModalContent({\n        title: \"Upload Failed\",\n        message: \"Failed to upload: \" + err.message + \". Please ensure the device is ready to receive data (e.g., in programming mode or awaiting input).\"\n      });\n    } finally {\n      setShowModal(true); // Always show a modal with upload status\n    }\n  };\n\n  // Loads keymap and macros from a JSON string pasted into a text area\n  const loadJsonFromTextArea = () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput);\n      let loadedMacros = []; // Declare loadedMacros here to be accessible for layers\n\n      // 1. Load Macros first, as layers might refer to them\n      if (parsedJson.macros && typeof parsedJson.macros === 'object') {\n        let currentMacroId = 1;\n        for (const macroKey in parsedJson.macros) {\n          const sequenceArray = parsedJson.macros[macroKey];\n          if (Array.isArray(sequenceArray) && sequenceArray.length > 0) {\n            const sequence = sequenceArray[0]; // Take the first element as the sequence string\n            // Convert MACRO_KEY to a readable name (e.g., \"MACRO_HELLO_WORLD\" -> \"Hello World\")\n            let name = macroKey.replace(/^MACRO_/, '').replace(/_/g, ' ').toLowerCase();\n            name = name.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\n            loadedMacros.push({ id: currentMacroId++, name: name, sequence: sequence });\n          }\n        }\n        setMacros(loadedMacros);\n        setNextMacroId(currentMacroId);\n      } else {\n        setMacros([]);\n        setNextMacroId(1);\n      }\n\n      // 2. Then load Layers\n      if (parsedJson.layers && typeof parsedJson.layers === 'object') {\n        const newKeymap = {};\n        for (const layerNum in parsedJson.layers) {\n          const flatLayer = parsedJson.layers[layerNum];\n          const gridLayer = createEmptyGrid(); // Start with an empty 3x3 grid\n          if (Array.isArray(flatLayer) && flatLayer.length === 9) { // Expect exactly 9 elements for 3x3\n            for (let i = 0; i < 9; i++) {\n              const row = Math.floor(i / 3);\n              const col = i % 3;\n              const comboString = flatLayer[i];\n\n              if (comboString && comboString !== \"KC_NO\") { // Ignore \"KC_NO\" or empty strings\n                let tapObj = { combo: comboString, description: comboString };\n\n                // Check if it's a macro reference\n                if (comboString.startsWith('MACRO_')) {\n                  // Reconstruct the expected macro name from the combo string for lookup\n                  const macroNameForLookup = comboString.replace(/^MACRO_/, '').replace(/_/g, ' ').toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n                  const correspondingMacro = loadedMacros.find(m => m.name === macroNameForLookup);\n\n                  if (correspondingMacro) {\n                    tapObj.description = correspondingMacro.name;\n                    tapObj.isMacro = true;\n                  } else {\n                    // If macro not found, just display its raw combo and mark as custom\n                    tapObj.description = macroNameForLookup; // Still try to show a readable name\n                    tapObj.isCustomShortcut = true; // Treat as custom if macro reference is broken\n                  }\n                } else {\n                  // Check if it's a known preset or custom shortcut\n                  const foundPreset = Object.values(presets).flat().find(p => p.combo === comboString);\n                  if (foundPreset) {\n                    tapObj.description = foundPreset.description;\n                  } else {\n                    tapObj.isCustomShortcut = true;\n                  }\n                }\n                gridLayer[row][col] = { tap: tapObj, hold: null };\n              }\n            }\n          } else {\n            console.warn(`Layer ${layerNum} in JSON is malformed (expected 9 elements) and was reset to empty.`);\n          }\n          newKeymap[String(layerNum)] = gridLayer; // Store with string key for consistency\n        }\n\n        // Ensure layer '0' always exists in the new keymap\n        if (!newKeymap['0']) {\n            newKeymap['0'] = createEmptyGrid();\n        }\n        setKeymap(newKeymap);\n        setActiveLayer('0'); // Reset active layer to 0 after loading\n      } else {\n        // If 'layers' property is missing or invalid in the JSON, reset keymap\n        setKeymap({ '0': createEmptyGrid() });\n        setActiveLayer('0');\n      }\n\n      // Handle combos (for now, just acknowledge their presence if they exist)\n      if (parsedJson.combos && Array.isArray(parsedJson.combos)) {\n          console.log(\"Combos found in JSON, but not currently used by UI:\", parsedJson.combos);\n          // If you later add UI for combos, you would set a state here\n      }\n\n      setModalContent({\n        title: \"JSON Loaded\",\n        message: \"Configuration loaded from text area successfully.\"\n      });\n    } catch (error) {\n      // Handle any JSON parsing errors\n      setModalContent({\n        title: \"JSON Parsing Error\",\n        message: \"Failed to parse JSON: \" + error.message\n      });\n    } finally {\n      setShowModal(true); // Always show a modal with the result\n    }\n  };\n\n  // Macro functions:\n\n  // Opens the MacroFormModal to add a new macro\n  const handleAddMacro = () => {\n    setEditingMacro(null); // Clear any existing macro data for a new entry\n    setShowMacroFormModal(true);\n  };\n\n  // Opens the MacroFormModal to edit an existing macro\n  const handleEditMacro = (macro) => {\n    setEditingMacro(macro); // Set the macro to be edited\n    setShowMacroFormModal(true);\n  };\n\n  // Saves a new or updated macro to the macros list\n  const handleSaveMacro = (newMacro) => {\n    if (newMacro.id) {\n      // If macro has an ID, it's an existing macro being edited\n      setMacros(prev => prev.map(m => m.id === newMacro.id ? newMacro : m));\n    } else {\n      // If no ID, it's a new macro\n      setMacros(prev => [...prev, { ...newMacro, id: nextMacroId }]);\n      setNextMacroId(prev => prev + 1); // Increment ID for the next new macro\n    }\n    setShowMacroFormModal(false); // Close the modal\n  };\n\n  // Initiates the macro deletion process by showing a confirmation modal\n  const handleDeleteMacro = (id) => {\n    setMacroToDeleteId(id); // Store the ID of the macro to be deleted\n    setShowConfirmationModal(true);\n  };\n\n  // Confirms and performs the macro deletion\n  const confirmDeleteMacro = () => {\n    setMacros(prev => prev.filter(m => m.id !== macroToDeleteId)); // Filter out the macro to delete\n    setShowConfirmationModal(false); // Close confirmation modal\n    setMacroToDeleteId(null); // Clear the ID\n  };\n\n  // Function to open the Add Shortcut Modal\n  const handleAddShortcut = () => {\n    setShowAddShortcutModal(true);\n  };\n\n  // Function to save a new shortcut from the Add Shortcut Modal to the current category\n  const handleSaveNewShortcut = (newShortcut) => {\n    setShortcutPool(prevPool => {\n      const newPool = { ...prevPool };\n      // Ensure the currently selected category exists before adding\n      if (!newPool[selectedShortcutCategory]) {\n        newPool[selectedShortcutCategory] = [];\n      }\n      newPool[selectedShortcutCategory].push(newShortcut); // Add the new shortcut\n      return newPool;\n    });\n    setShowAddShortcutModal(false); // Close the modal after saving\n  };\n\n  // Generates new shortcuts using AI based on user prompt\n  const generateAiShortcuts = async () => {\n    setIsGeneratingAiShortcuts(true); // Set loading state\n    try {\n      const chatHistory = [];\n      // Construct the prompt for the AI model\n      const promptText = `Generate a JSON array of 5-10 common keyboard shortcuts based on the following request: \"${aiPrompt}\". Each object in the array should have two properties: \"combo\" (the actual key combination, e.g., \"Ctrl+C\", \"Win+D\", \"KC_MPLY\") and \"description\" (a brief explanation of what the shortcut does, e.g., \"Copy selected text\", \"Show desktop\", \"Play/Pause media\"). Ensure the output is valid JSON and only contains the array.`;\n\n      chatHistory.push({ role: \"user\", parts: [{ text: promptText }] });\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\", // Request JSON output\n          responseSchema: { // Define the expected JSON schema\n            type: \"ARRAY\",\n            items: {\n              type: \"OBJECT\",\n              properties: {\n                \"combo\": { \"type\": \"STRING\" },\n                \"description\": { \"type\": \"STRING\" }\n              },\n              \"propertyOrdering\": [\"combo\", \"description\"]\n            }\n          }\n        }\n      };\n\n      const apiKey = \"\"; // API key will be provided by Canvas at runtime\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      // Make the API call to Gemini\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      const result = await response.json(); // Parse the JSON response from the API\n\n      // Check for valid response structure\n      if (result.candidates && result.candidates.length > 0 &&\n          result.candidates[0].content && result.candidates[0].content.parts &&\n          result.candidates[0].content.parts.length > 0) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const generatedShortcuts = JSON.parse(jsonString); // Parse the generated JSON string\n\n        if (Array.isArray(generatedShortcuts)) {\n          // Add generated shortcuts to a new \"AI GENERATED\" category in the shortcut pool\n          setShortcutPool(prev => ({\n            ...prev,\n            \"AI GENERATED\": generatedShortcuts.filter(s => s.combo && s.description).map(s => ({...s, isCustomShortcut: true})) // Mark as custom\n          }));\n          setSelectedShortcutCategory(\"AI GENERATED\"); // Automatically switch to the new category\n          setModalContent({\n            title: \"AI Shortcuts Generated\",\n            message: \"New shortcuts added to 'AI GENERATED' category in the shortcut pool.\"\n          });\n        } else {\n          throw new Error(\"AI response was not a valid array of shortcuts.\");\n        }\n      } else {\n        throw new Error(\"No valid response from AI for shortcuts.\");\n      }\n    } catch (error) {\n      console.error(\"AI Generation Error:\", error);\n      setModalContent({\n        title: \"AI Generation Failed\",\n        message: \"Could not generate shortcuts. Please try again or refine your prompt. Error: \" + error.message\n      });\n    } finally {\n      setIsGeneratingAiShortcuts(false); // Reset loading state\n      setShowModal(true); // Show modal with status\n    }\n  };\n\n  // Generates new macros using AI based on user prompt\n  const generateAiMacros = async () => {\n    setIsGeneratingAiMacros(true); // Set loading state\n    try {\n      const chatHistory = [];\n      // Construct the prompt for the AI model\n      const promptText = `Generate a JSON array of 1-3 simple macros based on the following request: \"${aiMacroPrompt}\". Each object in the array should have two properties: \"name\" (a short descriptive name for the macro) and \"sequence\" (the key sequence for the macro, e.g., \"Hello World!{Enter}\", \"Ctrl+S{Delay 100}Ctrl+P\"). Use common key names like {Enter}, {Tab}, {Space}, {Escape}, {Backspace}, {Delete} for special keys. Ensure the output is valid JSON and only contains the array.`;\n\n      chatHistory.push({ role: \"user\", parts: [{ text: promptText }] });\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\", // Request JSON output\n          responseSchema: { // Define the expected JSON schema\n            type: \"ARRAY\",\n            items: {\n              type: \"OBJECT\",\n              properties: {\n                \"name\": { \"type\": \"STRING\" },\n                \"sequence\": { \"type\": \"STRING\" }\n              },\n              \"propertyOrdering\": [\"name\", \"sequence\"]\n            }\n          }\n        }\n      };\n\n      const apiKey = \"\"; // API key will be provided by Canvas at runtime\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      // Make the API call to Gemini\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      const result = await response.json(); // Parse the JSON response from the API\n\n      // Check for valid response structure\n      if (result.candidates && result.candidates.length > 0 &&\n          result.candidates[0].content && result.candidates[0].content.parts &&\n          result.candidates[0].content.parts.length > 0) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const generatedMacros = JSON.parse(jsonString); // Parse the generated JSON string\n\n        if (Array.isArray(generatedMacros)) {\n          setMacros(prev => {\n            let currentId = nextMacroId;\n            // Map generated macros to include unique IDs and add them to the existing list\n            const newMacros = generatedMacros.map(m => ({\n              id: currentId++,\n              name: m.name,\n              sequence: m.sequence\n            }));\n            setNextMacroId(currentId); // Update the next available macro ID\n            return [...prev, ...newMacros.filter(m => m.name && m.sequence)]; // Filter out malformed entries\n          });\n          setModalContent({\n            title: \"AI Macros Generated\",\n            message: \"New macros added to your list.\"\n          });\n        } else {\n          throw new Error(\"AI response was not a valid array of macros.\");\n        }\n      } else {\n        throw new Error(\"No valid response from AI for macros.\");\n      }\n    } catch (error) {\n      console.error(\"AI Macro Generation Error:\", error);\n      setModalContent({\n        title: \"AI Macro Generation Failed\",\n        message: \"Could not generate macros. Please try again or refine your prompt. Error: \" + error.message\n      });\n    } finally {\n      setIsGeneratingAiMacros(false); // Reset loading state\n      setShowModal(true); // Show modal with status\n    }\n  };\n\n\n  // --- START OF COMPONENT RENDERING ---\n  return (\n    <div className=\"min-h-screen bg-zinc-800 text-white flex flex-col lg:flex-row font-inter\">\n      {/* Sidebar Navigation */}\n      <div className=\"w-full lg:w-64 bg-zinc-900 p-6 flex flex-col border-b lg:border-b-0 lg:border-r border-zinc-700 shadow-xl\">\n        <div className=\"text-2xl font-bold text-red-500 mb-8\">Trkey</div>\n        <nav className=\"flex-grow\">\n          <ul className=\"space-y-4\">\n            <li>\n              <a href=\"#\" onClick={() => setActiveTab('keymap')} className={`flex items-center ${activeTab === 'keymap' ? 'text-red-300' : 'text-zinc-400'} hover:text-red-500 font-semibold text-lg transition-colors duration-200`}>\n                <svg className=\"w-6 h-6 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path></svg>\n                KEYMAP\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" onClick={() => setActiveTab('macros')} className={`flex items-center ${activeTab === 'macros' ? 'text-red-300' : 'text-zinc-400'} hover:text-white transition-colors duration-200`}>\n                <svg className=\"w-6 h-6 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M12 6.293V4a1 1 0 00-1-1H5a1 1 0 00-1 1v10a1 1 0 001 1h6a1 1 0 001-1v-2.293l1.707 1.707a1 1 0 001.414-1.414l-4-4a1 1 0 00-1.414 0l-4 4a1 1 0 001.414 1.414L10 10.414V12a1 1 0 001 1h2a1 1 0 001-1V8.293l1.707 1.707a1 1 0 001.414-1.414l-4-4z\"></path></svg>\n                MACROS\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" onClick={() => setActiveTab('save-load')} className={`flex items-center ${activeTab === 'save-load' ? 'text-red-300' : 'text-zinc-400'} hover:text-white transition-colors duration-200`}>\n                <svg className=\"w-6 h-6 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M5 4a2 1 0 012-2h6a2 1 0 012 2v14l-5-2.5L5 18V4z\"></path></svg>\n                SAVE + LOAD\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" onClick={() => setActiveTab('settings')} className={`flex items-center ${activeTab === 'settings' ? 'text-red-300' : 'text-zinc-400'} hover:text-white transition-colors duration-200`}>\n                <svg className=\"w-6 h-6 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zm4 4a1 1 0 011 1v1a1 1 0 01-2 0V7a1 1 0 011-1zM6 6a1 1 0 00-1 1v1a1 1 0 002 0V7a1 1 0 00-1-1zm0 8a1 1 0 00-1 1v1a1 1 0 002 0v-1a1 1 0 00-1-1zm8 0a1 1 0 00-1 1v1a1 1 0 002 0v-1a1 1 0 00-1-1zm-4 4a1 1 0 00-1 1v1a1 1 0 002 0v-1a1 1 0 00-1-1zM2 10a1 1 0 001 1h1a1 1 0 000-2H3a1 1 0 00-1 1zm14 0a1 1 0 001 1h1a1 1 0 000-2h-1a1 1 0 00-1 1zM7 10a3 3 0 116 0 3 3 0 01-6 0z\"></path></svg>\n                SETTINGS\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" onClick={() => setActiveTab('keytester')} className={`flex items-center ${activeTab === 'keytester' ? 'text-red-300' : 'text-zinc-400'} hover:text-white transition-colors duration-200`}>\n                <svg className=\"w-6 h-6 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 00-1 1v10a1 1 0 001 1h12a1 1 0 001-1V5a1 1 0 00-1-1h-3.382l-.724-1.447A1 1 0 0011 2H9zM4 6h12v8H4V6z\"></path></svg>\n                KEY TESTER\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"text-sm text-zinc-500 mt-auto\">\n          <p>Version 1.0</p>\n          <p>Device: Micropad</p>\n        </div>\n      </div>\n\n      {/* Main Content Area */}\n      <div className=\"flex-grow p-4 lg:p-8 bg-zinc-800 flex flex-col\">\n        {/* Top Bar - Simplified for device info */}\n        <div className=\"flex justify-end items-center mb-4 pb-4 border-b border-zinc-700\">\n          <div className=\"text-zinc-500 text-sm sm:text-base\">\n            <span className=\"mr-1 sm:mr-2\">1UP60HSE</span>\n          </div>\n        </div>\n\n        {/* Conditional rendering based on activeTab */}\n        {activeTab === 'keymap' && (\n          <>\n            {/* Keymap Section */}\n            <div className=\"mb-6 lg:mb-10\">\n              <h2 className=\"text-xl font-bold text-red-300 mb-4\">KEYMAP</h2>\n              <div className=\"flex space-x-2 mb-6\">\n                {/* Layer selection buttons */}\n                {['0', '1', '2', '3'].map(layer => (\n                  <button\n                    key={layer}\n                    onClick={() => setActiveLayer(layer)}\n                    className={`px-3 py-1 sm:px-4 sm:py-2 rounded-md font-semibold text-sm sm:text-lg transition-colors duration-200 ${activeLayer === layer ? 'bg-red-600 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}`}\n                  >\n                    {layer}\n                  </button>\n                ))}\n              </div>\n\n              {/* Micropad Grid Display */}\n              {keymap[activeLayer] && keymap[activeLayer].length > 0 ? (\n                <div className=\"bg-zinc-900 p-4 sm:p-6 rounded-lg shadow-inner border border-zinc-700 w-fit mx-auto\">\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {keymap[activeLayer].map((row, rIdx) =>\n                      row.map((cell, cIdx) => (\n                        <KeyComponent // Render each key using the KeyComponent\n                          key={`${rIdx}-${cIdx}`}\n                          keyData={cell.tap || {}} // Pass tap data to KeyComponent\n                          isMacro={cell.tap && cell.tap.isMacro} // Pass isMacro flag\n                          isShortcut={cell.tap && cell.tap.isCustomShortcut} // Pass isCustomShortcut flag\n                          // Drag and drop props for reordering and assigning\n                          draggable\n                          onDragStart={(e) => handleKeymapDragStart(e, cell, rIdx, cIdx)}\n                          onDrop={(e) => handleDrop(e, rIdx, cIdx)}\n                          onDragOver={(e) => e.preventDefault()} // Allow drop\n                          onDragEnd={handleDragEnd}\n                          // Tailwind classes for styling and hover effects (removed bg-zinc-700 and text-white)\n                          className={`\n                            w-20 h-20 sm:w-24 sm:h-24 rounded-md shadow-md border border-zinc-600\n                            flex flex-col justify-center items-center cursor-grab active:cursor-grabbing\n                            relative overflow-hidden\n                            transform transition-all duration-200\n                            ${draggedShortcut ? 'border-dashed border-red-300' : 'hover:bg-red-600 hover:scale-105'}\n                          `}\n                        />\n                      ))\n                    )}\n                  </div>\n                </div>\n              ) : (\n                // Message when the current layer's keymap is empty\n                <div className=\"bg-zinc-900 p-6 rounded-lg shadow-inner border border-zinc-700 h-48 flex items-center justify-center text-zinc-400 text-lg text-center\">\n                  No keymap configured for Layer {activeLayer}. Drag shortcuts from the pool below to configure this layer.\n                </div>\n              )}\n            </div>\n\n            {/* Shortcut Pool Section */}\n            <div className=\"mt-6 lg:mt-10 w-full\">\n              <h2 className=\"text-xl text-red-400 font-bold mb-4\">SHORTCUTS</h2>\n              {/* Category Selection Buttons */}\n              <div className=\"flex flex-wrap gap-2 mb-4 p-2 bg-zinc-900 rounded-lg border border-zinc-700 overflow-x-auto custom-scrollbar\">\n                {Object.keys(shortcutPool).map(category => (\n                  <button\n                    key={category}\n                    onClick={() => setSelectedShortcutCategory(category)}\n                    className={`\n                      px-4 py-2 rounded-md font-semibold text-sm\n                      ${selectedShortcutCategory === category ? 'bg-red-600 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}\n                      transition-colors duration-200 flex-shrink-0\n                    `}\n                  >\n                    {category.replace(/_/g, ' ')} {/* Display category name nicely */}\n                  </button>\n                ))}\n              </div>\n\n              {/* Display Area for Selected Category's Shortcuts */}\n              <div className=\"bg-zinc-900 p-4 rounded-xl shadow-xl border border-red-600\">\n                <h3 className=\"text-lg font-semibold mb-3 text-red-300 border-b border-red-500 pb-2\">\n                  {selectedShortcutCategory.replace(/_/g, ' ')} Shortcuts\n                </h3>\n                <div className=\"grid grid-cols-auto-fit-minmax gap-2\" style={{ gridTemplateColumns: 'repeat(auto-fit, minmax(80px, 1fr))' }}>\n                  {shortcutPool[selectedShortcutCategory] && shortcutPool[selectedShortcutCategory].map((s, i) => (\n                    <div\n                      key={`${selectedShortcutCategory}-${i}`}\n                      draggable\n                      onDragStart={(e) => handleShortcutDragStart(e, s)}\n                      onDragEnd={handleDragEnd}\n                      className=\"\n                        w-full h-20 bg-zinc-700 text-white rounded-md shadow-md cursor-grab\n                        hover:bg-red-500 hover:scale-105 transition-all duration-200\n                        flex flex-col items-center justify-center text-center text-sm font-medium\n                        relative overflow-hidden\n                      \"\n                    >\n                      <span className=\"relative z-10 px-1\">{s.description || s.combo}</span>\n                      {/* Hidden input for editing shortcut combo directly */}\n                      <input\n                        type=\"text\"\n                        value={s.combo}\n                        onChange={(e) => updatePreset(selectedShortcutCategory, i, { ...s, combo: e.target.value, description: s.description || e.target.value })}\n                        onClick={(e) => e.stopPropagation()} // Prevent drag start when clicking input\n                        className=\"absolute inset-0 w-full h-full bg-transparent text-transparent border-none focus:outline-none cursor-text opacity-0\"\n                        style={{ zIndex: 10 }} // Ensure input is clickable\n                      />\n                    </div>\n                  ))}\n                  {/* Button to add a new custom shortcut to the current category */}\n                  <button\n                    onClick={handleAddShortcut}\n                    className=\"\n                      w-full h-20 bg-zinc-800 hover:bg-zinc-700 text-white text-sm py-2 rounded-md transition-colors duration-200\n                      flex items-center justify-center shadow-md border border-zinc-600 hover:border-red-500\n                    \"\n                  >\n                    + Add Shortcut\n                  </button>\n                </div>\n              </div>\n\n              {/* AI Shortcut Generator Section */}\n              <div className=\"mt-8 bg-zinc-900 p-4 rounded-xl shadow-xl border border-blue-600\">\n                <h3 className=\"text-lg font-semibold mb-3 text-blue-300 border-b border-blue-500 pb-2\">AI-POWERED SHORTCUT GENERATOR</h3>\n                <p className=\"text-sm text-zinc-400 mb-3\">Describe the shortcuts you need (e.g., \"common shortcuts for web browsing in macOS\", \"media controls for Windows\").</p>\n                <textarea\n                  className=\"w-full h-24 bg-zinc-800 text-white p-3 rounded-md border border-zinc-600 focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm\"\n                  placeholder=\"e.g., shortcuts for navigating documents in Linux\"\n                  value={aiPrompt}\n                  onChange={(e) => setAiPrompt(e.target.value)}\n                ></textarea>\n                <button\n                  onClick={generateAiShortcuts}\n                  disabled={isGeneratingAiShortcuts}\n                  className=\"mt-4 w-full bg-blue-600 hover:bg-blue-700 text-white text-lg py-2 rounded-lg transition-colors duration-200 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isGeneratingAiShortcuts ? \"Generating...\" : \"Generate with AI\"}\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Macros Tab Content */}\n        {activeTab === 'macros' && (\n          <div className=\"w-full max-w-4xl mx-auto\">\n            <h2 className=\"text-xl font-bold text-red-300 mb-4\">MACROS</h2>\n            <div className=\"bg-zinc-900 p-6 rounded-lg shadow-inner border border-zinc-700 mb-6\">\n              <button\n                onClick={handleAddMacro}\n                className=\"bg-red-600 hover:bg-red-700 px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-75 mb-4\"\n              >\n                + Add New Macro\n              </button>\n              {macros.length === 0 ? (\n                <p className=\"text-zinc-400\">No macros defined yet. Add a new macro or use the AI generator below.</p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {macros.map(macro => (\n                    <div key={macro.id} className=\"bg-zinc-800 p-4 rounded-md border border-zinc-700 flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n                      <div className=\"mb-2 sm:mb-0\">\n                        <h4 className=\"font-semibold text-lg text-red-200\">{macro.name}</h4>\n                        <p className=\"text-sm text-zinc-300 break-all\">{macro.sequence}</p>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <button onClick={() => handleEditMacro(macro)} className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded-md text-sm\">Edit</button>\n                        <button onClick={() => handleDeleteMacro(macro.id)} className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded-md text-sm\">Delete</button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* AI Macro Generator Section */}\n            <div className=\"mt-8 bg-zinc-900 p-4 rounded-xl shadow-xl border border-blue-600\">\n              <h3 className=\"text-lg font-semibold mb-3 text-blue-300 border-b border-blue-500 pb-2\">AI-POWERED MACRO GENERATOR</h3>\n              <p className=\"text-sm text-zinc-400 mb-3\">Describe the macros you need (e.g., \"macro for opening calculator\", \"email signature macro\").</p>\n              <textarea\n                className=\"w-full h-24 bg-zinc-800 text-white p-3 rounded-md border border-zinc-600 focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm\"\n                placeholder=\"e.g., macro for inserting current date\"\n                value={aiMacroPrompt}\n                onChange={(e) => setAiMacroPrompt(e.target.value)}\n              ></textarea>\n              <button\n                onClick={generateAiMacros}\n                disabled={isGeneratingAiMacros}\n                className=\"mt-4 w-full bg-blue-600 hover:bg-blue-700 text-white text-lg py-2 rounded-lg transition-colors duration-200 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isGeneratingAiMacros ? \"Generating...\" : \"Generate with AI\"}\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Key Tester Tab Content */}\n        {activeTab === 'keytester' && (\n          <div className=\"w-full max-w-4xl mx-auto\">\n            <h2 className=\"text-xl font-bold text-red-300 mb-4\">KEY TESTER</h2>\n            <div className=\"bg-zinc-900 p-6 rounded-lg shadow-inner border border-zinc-700 h-64 overflow-y-auto custom-scrollbar\">\n              <p className=\"text-zinc-400 mb-4\">Press any key on your physical keyboard to see its key code and key value.</p>\n              {pressedKeys.length === 0 ? (\n                <p className=\"text-zinc-500\">No keys pressed yet...</p>\n              ) : (\n                <ul className=\"space-y-2\">\n                  {pressedKeys.map((keyInfo, index) => (\n                    <li key={index} className=\"bg-zinc-700 p-2 rounded-md font-mono text-sm\">\n                      <span className=\"text-red-300\">Key:</span> {keyInfo.key} | <span className=\"text-blue-300\">Code:</span> {keyInfo.code}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Save/Load Profile Tab Content */}\n        {activeTab === 'save-load' && (\n          <div className=\"flex flex-col items-center justify-center h-full text-zinc-400 text-2xl w-full max-w-4xl mx-auto\">\n            <h2 className=\"text-xl font-bold text-red-300 mb-4\">SAVE / LOAD Profile</h2>\n            <div className=\"bg-zinc-900 p-6 rounded-lg shadow-inner border border-zinc-700 w-full flex flex-wrap justify-center gap-4 mt-8\">\n              <button onClick={saveProfile} className=\"bg-zinc-700 hover:bg-zinc-600 px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-zinc-500 focus:ring-opacity-75\">\n                Save Profile\n              </button>\n              <button onClick={loadProfile} className=\"bg-zinc-700 hover:bg-zinc-600 px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-zinc-500 focus:ring-opacity-75\">\n                Load Profile\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Settings Tab Content */}\n        {activeTab === 'settings' && (\n          <div className=\"flex flex-col items-center justify-center w-full text-zinc-400\">\n            <h2 className=\"text-xl font-bold text-red-300 mb-4\">SETTINGS</h2>\n\n            <div className=\"bg-zinc-900 p-6 rounded-lg shadow-inner border border-zinc-700 w-full max-w-4xl mb-8\">\n              <h3 className=\"text-lg font-semibold text-red-300 mb-4\">QMK JSON Configuration</h3>\n              <p className=\"mb-4 text-sm\">\n                You can export your current micropad keymap as JSON, upload it to your device, or load a keymap by pasting JSON below.\n                Note: This configurator supports a 3x3 micropad layout.\n              </p>\n              <div className=\"flex flex-wrap justify-center gap-4 mb-6\">\n                <button onClick={exportKeymap} className=\"bg-red-600 hover:bg-red-700 px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-75\">\n                  Export Keymap JSON\n                </button>\n                {!connectedPort ? (\n                  <button onClick={connectToDevice} className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-75\">\n                    Connect to Micropad\n                  </button>\n                ) : (\n                  <>\n                    <button onClick={uploadKeymapToConnectedDevice} className=\"bg-white text-black hover:bg-zinc-200 px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-75\">\n                      Upload Keymap to Device\n                    </button>\n                    <button onClick={disconnectDevice} className=\"bg-zinc-700 hover:bg-zinc-600 text-white px-6 py-3 rounded-full shadow-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-zinc-500 focus:ring-opacity-75\">\n                      Disconnect Micropad\n                    </button>\n                  </>\n                )}\n              </div>\n\n              <h4 className=\"text-md font-semibold text-red-300 mb-2\">Load JSON from Text Area</h4>\n              <textarea\n                className=\"w-full h-40 bg-zinc-800 text-white p-4 rounded-md border border-zinc-600 focus:outline-none focus:ring-2 focus:ring-red-500 font-mono text-sm\"\n                placeholder=\"Paste your QMK keymap JSON here...\"\n                value={jsonInput}\n                onChange={(e) => setJsonInput(e.target.value)}\n              ></textarea>\n              <button\n                onClick={loadJsonFromTextArea}\n                className=\"mt-4 w-full bg-red-800 hover:bg-red-900 text-white text-lg py-3 rounded-full transition-colors duration-200 shadow-lg\"\n              >\n                Load JSON\n              </button>\n            </div>\n\n            {/* Live JSON Preview */}\n            <h3 className=\"text-lg font-semibold text-red-300 mb-2\">Current Keymap JSON Preview</h3>\n            <pre className=\"mt-2 text-sm bg-zinc-900 p-6 rounded-lg text-left w-full max-w-4xl overflow-x-auto border border-red-500 font-mono shadow-inner\">\n              {/* This JSON.stringify renders the current keymap state as formatted JSON */}\n              {JSON.stringify({\n                layers: Object.keys(keymap).map(layerNum => {\n                  const flatLayer = [];\n                  for (let r = 0; r < 3; r++) {\n                      for (let c = 0; c < 3; c++) {\n                          const cell = keymap[layerNum][r][c];\n                          flatLayer.push(cell.tap ? cell.tap.combo : \"KC_NO\");\n                      }\n                  }\n                  return flatLayer;\n                }),\n                macros: Object.fromEntries(\n                  macros.map(macro => [\n                    `MACRO_${macro.name.toUpperCase().replace(/\\s/g, '_').replace(/[^A-Z0-9_]/g, '')}`,\n                    [macro.sequence]\n                  ])\n                ),\n                combos: [] // Always show empty combos in preview for now\n              }, null, 2)}\n            </pre>\n          </div>\n        )}\n      </div>\n\n      {/* Modals (these components are defined within this App.js file) */}\n      {/* General Info/Error Modal */}\n      <Modal\n        show={showModal}\n        title={modalContent.title}\n        message={modalContent.message}\n        onClose={() => setShowModal(false)}\n        customButtons={modalContent.customButtons} // Pass custom buttons if needed\n      />\n\n      {/* Macro Form Modal for adding/editing macros */}\n      <MacroFormModal\n        show={showMacroFormModal}\n        onClose={() => setShowMacroFormModal(false)}\n        onSave={handleSaveMacro}\n        macro={editingMacro} // Pass the macro object if editing\n      />\n\n      {/* Confirmation Modal for deleting macros */}\n      <ConfirmationModal\n        show={showConfirmationModal}\n        onClose={() => setShowConfirmationModal(false)}\n        onConfirm={confirmDeleteMacro}\n        message=\"Are you sure you want to delete this macro? This action cannot be undone.\"\n      />\n\n      {/* Add Shortcut Modal for adding custom shortcuts */}\n      <AddShortcutModal\n        show={showAddShortcutModal}\n        onClose={() => setShowAddShortcutModal(false)}\n        onSave={handleSaveNewShortcut}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}